services:

  backend:
    container_name: backend
    build: ./backend
    env_file: .env
    ports:
      - "8000:8000"
    volumes: #siuuu a revoir 
      - ./backend:/app
      - /app/node_modules
      - ./backend/database:/app/database
    depends_on:
      - database
    networks:
      - transcendence_network
    restart: unless-stopped
  
  frontend:
    build: ./frontend
    container_name: frontend
    env_file: .env
    ports:
      - "3000:3000"
    volumes: #siuu a revoir
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - transcendence_network
    restart: unless-stopped
  
  database:
    image: alpine:latest #siuu peut etre mettre une version precise
    container_name: database
    volumes:
      - ./backend/database:/data
    command: tail -f /dev/null
    networks:
      - transcendence_network
  
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - frontend
      - backend
    volumes: #siuuu a revoir
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      -   transcendence_network
    restart: unless-stopped

networks:
  transcendence_network:
    driver: bridge

volumes:
  database_data: #siuu pk _data et pas juste database
    driver: local


###########################################################################################

#vue avec mamadou
# ne pas exposer les port dans les deux sens, version 17, pas besoin de service frontend, .env, 

#services:

  #backend:
    #build: ./backend
    #ports:
      #- "8000"
    #environment: #.env
      #- NODE_ENV=development
      #- JWT_SECRET=your-super-secret-jwt-key
      #- PORT=8000
      #- HOST=0.0.0.0
    #networks:
      #- app-network
    #healthcheck:
      #test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      #interval: 30s
      #timeout: 10s
      #retries: 3

  #nginx:
    #build: ./nginx
    #ports:
      #- "8080:80"
    #depends_on:
      #backend:
        #condition: service_healthy
    #networks:
      #- app-network

#volumes:
  #postgres_data:

#networks:
  #app-network:
    #driver: bridge