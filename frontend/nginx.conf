# server {
#     listen 80;
#     listen 443 ssl;
    
#     ssl_certificate /etc/nginx/ssl/nginx.crt;
#     ssl_certificate_key /etc/nginx/ssl/nginx.key;
    
#     # Servir les fichiers statiques du frontend
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }
    
#     # Proxy vers le backend pour l'API
#     location /api/ {
#         proxy_pass http://backend:8000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# faire un serveur http sur 80 et rediriger vers https 443

server {
    listen 80;
    listen 443 ssl;
    
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    
    root /usr/share/nginx/html;
    index index.html;

    # Servir les avatars depuis le backend
    location /uploads/ {
        proxy_pass http://backend:8000/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Servir les traductions depuis /src/locales/
    location /src/locales/ {
        alias /usr/share/nginx/html/locales/;
        try_files $uri =404;
    }
    
    # API proxy vers le backend
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
}